name: Pipeline Profissional de CI/CD (Modo Manual)

on:
  push:
    branches: [ "main" ]

jobs:
  build-scan-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 1. Clonando o repositório
        uses: actions/checkout@v3

      - name: 2. Lint do código com ESLint
        run: |
          npm install
          npm run lint

      - name: 3. Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- A GRANDE MUDANÇA ESTÁ AQUI ---
      # Removemos a action 'build-and-push' e a substituímos por dois passos manuais.

      - name: 4. Build da imagem Docker (Manual)
        run: docker build --tag ghcr.io/${{ github.repository }}:${{ github.sha }} .
        # Este comando constrói a imagem e a etiqueta (tag) exatamente como a action faria.

      - name: 5. Push da imagem Docker (Manual)
        run: docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
        # Este comando empurra a imagem que acabamos de construir para o registry.

      # --- Os passos seguintes foram renumerados ---

      - name: 6. Teste simples da imagem
        run: docker run -d --name test-container ghcr.io/${{ github.repository }}:${{ github.sha }} && docker stop test-container

      - name: 7. Scan de vulnerabilidades da imagem
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'